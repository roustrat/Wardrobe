plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.str.wardrobe"
        minSdk 23
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    // Для того, чтобы схемы базы данных создавать не самим, а за нас создавал сам Room
    // и по указанномму пути эти схемы будут складываться
    kapt {
        arguments {
            arg("room.schemaLocation", "$projectDir/schemas")
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    namespace 'com.str.wardrobe'
}

dependencies {

    constraints {
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.0") {
            because("kotlin-stdlib-jdk7 is now a part of kotlin-stdlib")
        }
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0") {
            because("kotlin-stdlib-jdk8 is now a part of kotlin-stdlib")
        }
    }

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.7.0-alpha01'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

    implementation 'androidx.activity:activity-ktx:1.6.1'
    implementation 'androidx.fragment:fragment-ktx:1.5.5'

    // for onBackPressedDispatcher
    implementation 'androidx.appcompat:appcompat:1.7.0-alpha01'

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // CameraX
    def camerax_version = '1.3.0-alpha03'
    // CameraX core library using camera2 implementation
    implementation "androidx.camera:camera-core:${camerax_version}"

    implementation "androidx.camera:camera-camera2:${camerax_version}"
    // CameraX Lifecycle Library

    implementation "androidx.camera:camera-lifecycle:${camerax_version}"
    // CameraX View class
    implementation "androidx.camera:camera-view:${camerax_version}"

    implementation "androidx.camera:camera-extensions:${camerax_version}"
// Compressor is a lightweight and powerful android image compression library.
// Compressor will allow you to compress large photos into smaller sized photos
// with very less or negligible loss in quality of the image.
    implementation 'id.zelory:compressor:3.0.1'

    // Paris
//    Paris lets you define and apply styles programmatically to Android views, including custom attributes.
//    Apply styles programmatically at any time.
//            Combine multiple styles together.
//    Create styles programmatically (as opposed to using XML).
//    Use annotations to easily support custom attributes (inspired by Barber).
//    Declare explicitly supported styles for your custom views.
//    And much more...
    implementation 'com.airbnb.android:paris:2.0.1'
    // Apply the Paris processor if you're using Paris annotations for code gen.
    kapt 'com.airbnb.android:paris-processor:2.0.1'
}